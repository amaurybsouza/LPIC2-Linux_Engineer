The following is a partial list of the used files, terms and utilities:



#### MEDIR RESOLVER PROBLEMAS DE USO DE RECURSOS (iostat, vmstat e mpstat)

- são comandos e dados que são importantes observar para detecção de problemas de performance do sistema.



#iostat (relatório de uso de CPU e de I/O dos dispositivos de armazenamento)

- Agora vamos entender uma linha importante do comando iostat:

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           4,23    0,05    1,11    1,73    0,00   92,88


%user (tempo médio de uso de CPU de usuários, software que eu executei o usuário root, interface gráfica).

%nice (aplicações de usuário em que foi definido um nice especifico, alguma prioridade)

%system (uso de CPU pelo kernel, alocação de recursos)

%iowait (tempo de espera da CPU para esperar um procedimento de entrada e saída em disco, lentidão do disco, para escrever em determinado de setor do disco)

%steal (usado em máquinas virtuais, CPU virtual, tempo da CPU da máquina virtual ficou esperando a CPU real dar o recurso para a CPU virtual)

%idle (tempo que minha CPU ficou em status idle)


- Opções do comando iostat
-m: mostra o relatório, os dados em mega bytes.
-h: mostra em modo mais humano, mais detalhado.
-c: mostra só dados de CPU.
-d: mostra apena os devices no relatório. 
-p: mostra as partições (dados de I/O das partições)

#Outro detalhe importante com o comando iostat, é que ele pode mostrar as informações em intervalos:

$iostat -c 2 (mostra os dados de CPU a cada dois segundos)
Linux 4.15.0-45-generic (wk2001876) 	05/02/2019 	_x86_64_	(8 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           4,35    0,04    1,19    1,34    0,00   93,09


$iostat -c 2 5 (mostra os dados de CPU a cada dois segundos, por 5 vezes)
Linux 4.15.0-45-generic (wk2001876)     05/02/2019      _x86_64_        (8 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           4,35    0,04    1,19    1,34    0,00   93,09


$iostat -d 2
Linux 4.15.0-45-generic (wk2001876) 	05/02/2019 	_x86_64_	(8 CPU)

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
loop0             0,01         0,25         0,00       1056          0
loop1             0,01         0,08         0,00        352          0
loop2             0,01         0,08         0,00        352          0
loop3             0,03         0,27         0,00       1138          0
loop4             0,01         0,03         0,00        126          0
loop5             0,64         0,88         0,00       3704          0
loop6             0,02         0,26         0,00       1110          0
loop7             0,01         0,08         0,00        348          0
sda              24,28       435,23       378,73    1826253    1589184
loop8             0,02         0,26         0,00       1111          0
loop9             0,01         0,08         0,00        354          0
loop10            0,01         0,03         0,00        123          0
loop11            0,12         0,19         0,00        803          0
loop12            0,01         0,03         0,00        120          0
loop13            0,04         0,29         0,00       1206          0
loop14            0,01         0,03         0,00        127          0



#vmstat (mostra informações sobre os processos, memória, paginação, buffer, blocos de I/O)

$vmstat 
procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
 0  0      0 891284  10100  80544    0    0    77     6   12   22  0  0 100  0  0


-> As duas primeiras colunas do comando "vmstat" são importantes:

r: é o que está na fila de processamento dos processadores.

b: é o que está em estado de bloqueio, processo bloqueado, ele fica com esse "b"


- Opções do comando vmstat
-d: mostra os dispositivos que tem na máquina (sda/sdb).
-p: mostra as partições (tem que especificar a partição).



#mpstat (mostra informações sobre CPU, mais detalhado do que eu tenho no iostat)

$mpstat 
Linux 4.9.0-8-amd64 (lpi2) 	06-02-2019 	_x86_64_	(1 CPU)

21:05:28     CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle
21:05:28     all    0,05    0,00    0,18    0,06    0,00    0,01    0,00    0,00    0,00   99,69


#sar (mostra histórico de uso dos recursos de hardware do sistema)





### COMANDOS PARA MONITORAÇÃO DE REDE, TABELA DE ROTEAMENTO, ESTATÍSTICAS DE REDE.


#netstat (esse comando mostra por padrão as conexões de rede, tabelas de roteamento).


-> Algumas opções do comando netstat:
1) netstat -i (mostra todas as interfaces de rede que tem na máquina, e as estatisticas das interfaces)

- mesmas estatisticas que o comando "ifconfig" mostra.

$netstat -i
Tabela de Interfaces do Kernel
Iface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg
enp0s3    1500     1979      0      0 0          1247      0      0      0 BMRU
lo       65536      160      0      0 0           160      0      0      0 LRU


2) netstat -s (mostra as estatisticas por protocolo, um resumo com as estatisticas de cada protocolo, tráfico, etc) 

$netstat -s
Ip:
    Forwarding: 2
    1854 total packets received
    0 forwarded
    0 incoming packets discarded
    1854 incoming packets delivered
    1372 requests sent out
    40 outgoing packets dropped
    40 dropped because of missing route
Icmp:
    82 ICMP messages received
    0 input ICMP message failed
    Histograma de entrada ICMP:
        destination unreachable: 80
        echo replies: 2
    82 ICMP messages sent
    0 ICMP messages failed
    Histograma de saída ICMP
        destination unreachable: 80
        echo requests: 2
IcmpMsg:
        InType0: 2
        InType3: 80
        OutType3: 80
        OutType8: 2
Tcp:
    0 active connection openings
    1 passive connection openings
    0 failed connection attempts
    0 connection resets received
    1 connections established
    1474 segments received
    995 segments sent out
    0 segments retransmitted
    0 bad segments received
    0 resets sent
Udp:
    23 packets received
    80 packets to unknown port received
    0 packet receive errors
    299 packets sent
    0 receive buffer errors
    0 send buffer errors
    IgnoredMulti: 139


3) netstat -a (mostra todos os sockets que estão em listen ou não) *socket == processo, arquivo no sistema.

$netstat -a
Conexões Internet Ativas (servidores e estabelecidas)
Proto Recv-Q Send-Q Endereço Local          Endereço Remoto         Estado     
tcp        0      0 0.0.0.0:ssh             0.0.0.0:*               OUÇA      
tcp        0      0 192.168.0.116:ssh       192.168.0.107:52946     ESTABELECIDA
tcp6       0      0 [::]:ssh                [::]:*                  OUÇA      
udp        0      0 0.0.0.0:bootpc          0.0.0.0:*                          
Domain sockets UNIX ativos (servidores e estabelecidas)
Proto RefCnt Flags       Type       State         I-Node   Caminho
unix  3      [ ]         DGRAM                    8983     /run/systemd/notify
unix  2      [ ]         DGRAM                    8985     /run/systemd/cgroups-agent
unix  2      [ ACC ]     STREAM     OUVINDO       8989     /run/systemd/private
unix  8      [ ]         DGRAM                    8995     /run/systemd/journal/dev-log
unix  2      [ ]         DGRAM                    8999     /run/systemd/journal/syslog
unix  2      [ ACC ]     STREAM     OUVINDO       9004     /run/systemd/fsck.progress
unix  2      [ ACC ]     SEQPACKET  OUVINDO       9008     /run/udev/control
unix  2      [ ACC ]     STREAM     OUVINDO       9018     /run/systemd/journal/stdout
unix  8      [ ]         DGRAM                    9020     /run/systemd/journal/socket
unix  2      [ ACC ]     STREAM     OUVINDO       10845    /var/run/dbus/system_bus_socket
unix  2      [ ]         DGRAM                    13220    /run/user/0/systemd/notify
unix  2      [ ACC ]     STREAM     OUVINDO       13224    /run/user/0/systemd/private
unix  2      [ ACC ]     STREAM     OUVINDO       13229    /run/user/0/gnupg/S.gpg-agent.extra
unix  2      [ ACC ]     STREAM     OUVINDO       13232    /run/user/0/gnupg/S.gpg-agent.browse


#ss (um comando ótimo que está substituindo o netstat, novo modelo do netstat)

- ss já padrão em muitas distros.

- A diferença entre esses dois comandos são:
-> netstat (pega os resultados lá do arquivo do /proc/sys) * /proc é um reflexo do que está no kernel.
-> ss (pega os resultados direto na memória do kernel, é mais direto no kernel).


-> Opções do comando ss:

1) $ss (sem parâmetros mostra todas as conexões) *semelhante ao netstat -a


2) $ss -s (mostra as estatisticas, um resumo dos pacotes, conexões TCP)
Total: 1652 (kernel 2032)
TCP:   40 (estab 25, closed 0, orphaned 1, synrecv 0, timewait 0/0), ports 0

Transport Total     IP        IPv6
*	  2032      -         -        
RAW	  1         0         1        
UDP	  20        15        5        
TCP	  40        35        5        
INET	  61        50        11       
FRAG	  0         0         0 


3) $ss -l (mostra as conexões em estado listening)


4) $ss -t (conexões TCP, sockets TCP)
ss -t
State                         Recv-Q                      Send-Q                                            Local Address:Port                                              Peer Address:Port                      
ESTAB                         0                           0                                               200.144.112.165:54062                                            157.240.12.53:https                     
ESTAB                         0                           0                                               200.144.112.165:45944                                          151.101.176.175:https                     
ESTAB                         0                           0                                               200.144.112.165:44610                                            200.144.114.2:http                      
ESTAB                         0                           0                                               200.144.112.165:42426                                          172.217.192.189:https                     
ESTAB                         0                           0                                               200.144.112.165:46776                                          151.101.176.175:https                     
ESTAB                         0                           0                                               200.144.112.165:60598                                            108.174.11.17:https                     
ESTAB                         0                           0                                               200.144.112.165:37266                                          151.101.253.168:https                     
ESTAB                         0                           0                                               200.144.112.165:41162                                            172.217.28.10:https                     
ESTAB                         0                           0                                               200.144.112.165:41160                                            172.217.28.10:https 


5) $ss -tn (mostra as conexões TCP e a opção n para não resolver)


#iptraf (ele faz a monitoração do tráfego em tempo real, monitora o ambiente em tempo real)

- não está instalado por padrão no sistema.



                                                                        ┌─────────────────────────────────┐
                                                                        │ IP traffic monitor              │
                                                                        │ General interface statistics    │
                                                                        │ Detailed interface statistics   │
                                                                        │ Statistical breakdowns...       │
                                                                        │ LAN station monitor             │
                                                                        │─────────────────────────────────│
                                                                        │ Filters...                      │
                                                                        │─────────────────────────────────│
                                                                        │ Configure...                    │
                                                                        │─────────────────────────────────│
                                                                        │ About...                        │
                                                                        │─────────────────────────────────│
                                                                        │ Exit                            │
                                                                        └─────────────────────────────────┘

- como que funciona essa ferramenta?
- alguns processos ineternos se comunicam via interface de loopback, por isso aparece muito "UDP (234 bytes) from 127.0.0.53:53 to 127.0.0.1:45554 on lo"   
- é possível fazer essa monitoração via SSH, em acesso remoto porque essa ferramenta executa em bash.
- posso ver as estatisticas de rede, das interfaces da máquina/pacotes capturados/filtros e configurar para uma melhor monitoração da rede.
- 


















#w


#top


#processes blocked on I/O

#blocks out


#pstree, ps

#lsof

#uptime

#swap

#blocks in


